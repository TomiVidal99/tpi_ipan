function [aproximated_points] = runge_kutta(f1, f2, initial_conditions, interval, step)

    aproximated_points = NaN;

    % vector que contiene la variable independiente
    x = [interval(1):step:interval(2)];
    y1(1) = initial_conditions(1);
    y2(1) = initial_conditions(2);

    for (i = 1:(length(x)-1))

        k11 = f1(x(i), y1(i), y2(i));
        k12 = f2(x(i), y1(i), y2(i));

        k21 = f1(x(i), y1(i)+step/2, y2(i) + k11*step/2);
        k22 = f2(x(i), y1(i)+step/2, y2(i) + k12*step/2);

        k31 = f1(x(i), y1(i) + step/2, y2(i) + k21*step/2);
        k32 = f2(x(i), y1(i) + step/2, y2(i) + k22*step/2);

        k41 = f1(x(i), y1(i) + step, y2(i) + k31*step);
        k42 = f2(x(i), y1(i) + step, y2(i) + k32*step);

        y1(i+1) = y1(i) + (step/6)*(k11 + 2*k21 + 2*k31 + k41);
        y2(i+1) = y2(i) + (step/6)*(k12 + 2*k22 + 2*k32 + k42);

    end

    aproximated_points = [transpose(x), transpose(y1)];

end
